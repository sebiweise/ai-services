import { ClerkProvider, OrganizationSwitcher, SignedIn, UserButton } from '@clerk/nextjs'

import type { Metadata } from 'next'
import "@/styles/globals.css"
import { Inter as FontSans } from "next/font/google"

import { Analytics } from '@vercel/analytics/react';
import { AxiomWebVitals } from 'next-axiom';

import { Toaster } from "@/components/ui/toaster"

import { cn } from "@/lib/utils"
import { MainNav } from '@/components/main-nav';
import { Search } from '@/components/search';
import { ThemeProvider } from '@/components/theme-provider';
import { ThemeModeToggle } from '@/components/theme-mode-toggle';

export const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  return (
    <ClerkProvider>
      <html lang="en" suppressHydrationWarning>
        <body
          className={cn(
            "min-h-screen bg-background font-sans antialiased",
            fontSans.variable
          )}>
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            <div className="border-b">
              <div className="flex h-16 items-center px-4">
                <MainNav className="mx-6" />
                <div className="ml-auto flex items-center space-x-4">
                  <ThemeModeToggle />
                  <SignedIn>
                    <Search />
                    <OrganizationSwitcher />
                    <UserButton afterSignOutUrl="/" />
                  </SignedIn>
                </div>
              </div>
            </div>
            <div className="flex-1 space-y-4 p-8 pt-6">
              {children}
            </div>

            <Toaster />
            <Analytics />
            <AxiomWebVitals />
          </ThemeProvider>
        </body>
      </html>
    </ClerkProvider>
  )
}
